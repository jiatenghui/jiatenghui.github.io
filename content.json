{"meta":{"title":"绊AI的博客","subtitle":"绊AI的博客","description":null,"author":"绊AI","url":"cuijiahuan.github.io"},"pages":[{"title":"about","date":"2017-06-11T07:13:06.000Z","updated":"2019-07-12T05:29:19.116Z","comments":true,"path":"about/index.html","permalink":"cuijiahuan.github.io/about/index.html","excerpt":"","text":""}],"posts":[{"title":"tj前端项目部署流程","slug":"tj前端项目部署流程","date":"2019-07-15T10:54:45.000Z","updated":"2019-07-16T03:38:21.216Z","comments":true,"path":"2019/07/15/tj前端项目部署流程/","link":"","permalink":"cuijiahuan.github.io/2019/07/15/tj前端项目部署流程/","excerpt":"请输入密码进行查看","text":"Please enter the password to read the blog. Incorrect Password! No content to display! ","categories":[],"tags":[]},{"title":"Git学习【更新】","slug":"Git学习【持续更新】","date":"2019-07-11T09:48:24.000Z","updated":"2019-07-12T03:18:57.655Z","comments":true,"path":"2019/07/11/Git学习【持续更新】/","link":"","permalink":"cuijiahuan.github.io/2019/07/11/Git学习【持续更新】/","excerpt":"","text":"什么是Git？ Git是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理，而对于大家熟知的Github来说，它是一个用Git做版本控制的项目托管平台如图： 在这里我把我学习Git过程中的知识总结出来，供大家参考 要想使用Git，首先我们需要来安装Git，这里我把链接放在这，有兴趣的兄dei可以来下载安装链接 密码：ue9y 下载好之后，我们就开始正式了解Git 因为在建博客时也用到了Git，因此我主要说明一下Git如何进行远程连接和下载提交工程要使用Git，我们首先要告诉Git我们是谁一般填写的都是Github的用户名和注册邮箱 1git config --global user.name &apos;你的名称&apos; 1git config --global user.email &apos;你的邮箱&apos; 初始化在任意一个地方新建一个文件，然后在文件中打开git，输入初始化命令 1git init 即初始化完成 提交过程首先我们需要先查看当前文件的状态 1git status 它会显示出当前我们所在的分支，比如“on branch master”表示我们现在处在master这个分支上，即主分支 当我们在文件中新建文件之后，再次运行“git status”时，结果会以红色字体出现新建文件名，即git未跟踪文件，现在我们需要将未跟踪文件添加进来，输入 1git add . #表示添加所有修改文件 或1git add 文件名 #表示添加某一文件 再次运行“git status”，会显示绿色字体，表示该文件将要被提交，这时需要确认提交 1git commit -m &apos;提交信息&apos; #提交信息主要写你提交了什么文件 提交完成 注：一旦修改了跟踪文件的内容，就要重新进行提交 创建分支先查看所有分支 1git branch 分支名称左边有“*”的默认为当前分支 创建分支 1git branch 分支名 既然分支创建好了，如何切换分支呢？我们需要输入命令 1git checkout 分支名 下载版本库1git clone 远程版本库地址 #默认名称为版本库名称，可以在后面加上自定义的名称 下载完成后，就可以在本地对版本库进行修改 提交版本库当修改完成之后，在git里面输入1git push origin master 完成提交 但是远程版本库并不知道你已经更新了状态，这个时候我们需要输入 1git fetch 提示已经提取到更新，然后查看状态 1git status 查看显示远程上已经有了更新，然后我们需要进行 1git merge origin/master 这个时候当前分支就与“master”分支保持一致了 以上 2017-06-12 分割线 在主分支master上创建子分支（如t1和t2）时，需要注意，创建t1成功后，需要切换回master分支再创建t2分支，这样t1和t2才会是平级的分支。 在工作中使用git进行代码管理时，需要注意公司采用图形化管理还是命令行管理，使用图形化管理时需要注意当前代码需改完成之后，需要进入gitlab下的项目中找到要提交的分支进行merge；命令行合并代码的时候，子分支进行到 git commit -m “xxx” 时就可以切换分支进行合并，然后在主分支进行远程提交即可。 ==另注：使用git一定要小心== 更新于 2019-07-11","categories":[],"tags":[]},{"title":"H5项目理解【持续更新】","slug":"途家H5站点初步理解","date":"2019-07-11T08:26:23.000Z","updated":"2019-07-15T03:33:34.979Z","comments":true,"path":"2019/07/11/途家H5站点初步理解/","link":"","permalink":"cuijiahuan.github.io/2019/07/11/途家H5站点初步理解/","excerpt":"请输入密码进行查看","text":"Please enter the password to read the blog. Incorrect Password! No content to display! ","categories":[],"tags":[]},{"title":"vue问题总结【更新】","slug":"vue问题总结【持续更新】","date":"2018-08-22T13:06:55.000Z","updated":"2019-07-12T03:19:15.275Z","comments":true,"path":"2018/08/22/vue问题总结【持续更新】/","link":"","permalink":"cuijiahuan.github.io/2018/08/22/vue问题总结【持续更新】/","excerpt":"","text":"1、今天在公司修改样式的时候发现引入Element-UI的tooltip组件之后，想对tootip的样式进行自定义修改，结果发现无论怎么设置选择器的优先级，都渲染不到页面上，后来经过一系列的尝试之后发现是由于给style设置scoped造成的，本身设置scoped是为了防止全局样式冲突，结果没想到会造成自定义的样式渲染不上，后来经过思考测试，其实是可以将组件内修改tooltp的样式放到全局css中，不过需要给对应的元素设置类型，比如tooltip可以通过popper-class=”tooltip”设置类名，然后给这个类名添加样式。 2、在进行vue页面编写时经常会用到数据绑定，在渲染页面的时候其实会出现页面闪烁会看到变量的问题，比如通过&lt;p&gt;&lt;p&gt;进行数据绑定，页面刷新时可能会看到，这对于用户体验来说是很差的，因此我们可以使用v-clock来解决这个问题，基本上我们只需要把它添加到el挂载的标签就可以，一般来说就是最外层的div，如&lt;div class=”#app” v-clock&gt; 在某些情况下v-clock并不起作用 ①、挂载v-clock的元素的display属性被更高层级的覆盖掉了，如!important属性，这就需要我们提高层级 ②、当样式放到@import引入的css文件中时v-clock是不起作用的，可以用link引入样式或者写入内联样式。 3、在搭建个人博客时我曾经换过页面标题旁边的图标，因此在利用vue编写个人项目时也考虑过这个问题，它的实现思路和博客其实差不多，只需要在最外层index.html的head标签里面加上&lt;link rel=”shortcut icon” type=”image/x-icon” href=”static/favicon.ico”&gt;，个人建议图标和logo之类的图片放在static文件夹中比较好。 to be continue…","categories":[],"tags":[]},{"title":"利用hover控制其他元素样式","slug":"利用hover控制其他元素样式","date":"2018-08-21T13:05:29.000Z","updated":"2018-08-22T00:53:25.420Z","comments":true,"path":"2018/08/21/利用hover控制其他元素样式/","link":"","permalink":"cuijiahuan.github.io/2018/08/21/利用hover控制其他元素样式/","excerpt":"","text":"之前在项目中有一个需求是鼠标移入元素上时该元素改变样式的同时另外元素样式也要改变，刚开始想利用js来实现，不过有点麻烦，之后发现可以通过css直接来实现这个功能，本着人无我有，人有我优的原则，在这里记录一下具体过程。 首先我经过尝试以及网上查找之后，发现利用hover来实现这个功能是有一定局限性的，如果你要改变其他元素的样式，那么它们必须是相邻同级元素或者是同一父元素的子元素，不然效果是出不来的（呜~） 相邻同级元素HTML &lt;div class=\"div1\"&gt; &lt;div class=\"son1\"&gt;son1 &lt;/div&gt; &lt;div class=\"son2\"&gt;son2 &lt;/div&gt; &lt;/div&gt; CSS .son1 , .son2{ width:100px; height:100px; border:1px solid #000; } .son1:hover + .son2{ background:#000; } 鼠标移入son1元素，son2元素背景色变黑 父级元素HTML &lt;div class=\"div1\"&gt; &lt;div class=\"son\"&gt;son1 &lt;/div&gt; &lt;/div&gt; CSS .div1{ width:200px; height:200px; border:1px solid #000; } .son{ margin:0 auto; width:100px; height:100px; border:1px solid #000; } .div1:hover .son{ background:#000; } 鼠标移入父级.div1元素，子元素son背景变黑","categories":[],"tags":[]},{"title":"Web安全攻击方式","slug":"Web安全攻击方式","date":"2018-05-18T15:56:27.000Z","updated":"2018-08-04T16:29:13.498Z","comments":true,"path":"2018/05/18/Web安全攻击方式/","link":"","permalink":"cuijiahuan.github.io/2018/05/18/Web安全攻击方式/","excerpt":"","text":"xssxss是跨站脚本攻击，指攻击者在网页中嵌入客户端脚本，当用户浏览次页面时，脚本就会在用户浏览器上执行，从而达到攻击目的 比如我们下载有这么一个代码 &lt;input type=”text” name=”address” value=”valuefrom”&gt; valuefrom是来自用户的输入，如果用户不是输入valuefrom而是输入”/&gt;&lt;script&gt;alert(document.cookie)&gt;/script&gt;&lt;!-,即变成 &lt;input type=”text” name=”address” value=””/&gt;&lt;script&gt;alert(document.cookie)&lt;/script&gt;&lt;!-“&gt; 嵌入的javascript代码将会被执行 xss漏洞修复原则：不要相信用户输入的数据 *注意：攻击代码不一定在&lt;script&gt;&lt;script&gt;标签里 将重要的cookie标记为http only，这样js的document.cookie语句就无法获取cookie 只允许用户输入我们规定的数据，比如年龄只允许输入数字 对数据进行html Encode处理 过滤或移除特殊的html标签，例如&lt;script&gt;,&lt;iframe&gt; 过滤掉js事件的标签，比如onclick,onfocus csrfcsrf是跨站请求伪造，指攻击者盗用了你的身份，以你的名义发送恶意请求，csrf能够以你名义发送邮件，发消息……会造成个人隐私泄露以及财产安全等问题 要完成一次csrf攻击，受害者必须依次完成两个步骤： 登录受信任网站A，并在本地生成cookie 在不登出A的情况下，访问危险网站B 看到这里，你也许会说：“如果我不满足以上两个条件中的一个，我就不会受到CSRF的攻击”。是的，确实如此，但你不能保证以下情况不会发生： 1.你不能保证你登录了一个网站后，不再打开一个tab页面并访问另外的网站。 2.你不能保证你关闭浏览器了后，你本地的Cookie立刻过期，你上次的会话已经结束。（事实上，关闭浏览器不能结束一个会话，但大多数人都会错误的认为关闭浏览器就等于退出登录/结束会话了……） 3.所谓的攻击网站，可能是一个存在其他漏洞的可信任的经常被人访问的网站。 csrf防御 1.服务端进行csrf防御 服务端的CSRF方式方法很多样，但总的思想都是一致的，就是在客户端页面增加伪随机数。 (1).Cookie Hashing(所有表单都包含同一个伪随机值) (2).验证码 (3).One-Time Tokens(不同的表单包含一个不同的伪随机值) 目前防御 CSRF 攻击主要有三种策略： ①验证 HTTP Referer 字段； ②在请求地址中添加 token 并验证； ③在 HTTP 头中自定义属性并验证。","categories":[],"tags":[]},{"title":"安装mongodb遇到的坑","slug":"安装mongodb遇到的坑","date":"2018-05-11T15:55:45.000Z","updated":"2018-08-02T16:04:52.789Z","comments":true,"path":"2018/05/11/安装mongodb遇到的坑/","link":"","permalink":"cuijiahuan.github.io/2018/05/11/安装mongodb遇到的坑/","excerpt":"","text":"mongodb是一个基于分布式文件存储的开源数据库系统，它主要为WEB应用提供可扩展的高性能数据存储解决方案。下面我说说具体的安装过程 我在官网上下载最新3.6版本并在windows下安装会出现进度条长时间不动的情况，这是因为3.6版本在windows下有不适配的问题，需要我们下载3.4版本安装 （我的安装路径是C:\\Program Files\\MongoDB） 下载安装完成之后，需要添加安装路径到path环境变量：C:\\Program Files\\MongoDB\\Server\\3.4\\bin 我们在D盘创建如下文件夹D:\\mongodb\\data D:\\mongodb\\logs 在命令提示符输入 cd C:\\Program Files\\MongoDB\\Server\\3.4\\bin 再输入mongod.exe –dbpath=D:\\mongodb\\data –logpath=D:\\mongodb\\logs\\mongodb.log –install 输入net start mongodb启动服务 最后在浏览器输入http://localhost:27017/在页面看到It looks like you are trying to access MongoDB over HTTP on the native driver port.表示成功 在这里我说一下我安装的时候遇到的几个坑 1.首先就是安装包问题，需要安装3.4版本的2.在输入net start mongodb之后，提示我服务没有响应控制功能，之后我发现在配置path路径时把C:\\windows\\system32给删掉了，把这句加上就可以了在D盘创建文件夹时，当时看别人的博客是把logs文件夹放到data文件夹里面，我这样操作之后启动服务是无法启动的，当我把logs文件夹和data文件夹并列之后，启动是可以的。","categories":[],"tags":[]},{"title":"使用express配置前端服务器","slug":"使用express配置前端服务器","date":"2018-05-05T13:39:41.000Z","updated":"2018-08-01T13:48:58.086Z","comments":true,"path":"2018/05/05/使用express配置前端服务器/","link":"","permalink":"cuijiahuan.github.io/2018/05/05/使用express配置前端服务器/","excerpt":"","text":"使用webpack打包vue项目之后会生成dist文件夹，dist文件夹下面有html文件和其他的css,js和img等文件，如果你要查看打包之后的文件怎么办，这时候我们可以将生成的dist文件部署到express服务器上运行。 首先我们需要安装express-generator生成器 npm install express-generator -g 创建express项目 express expressname(项目名称) 进入项目目录，安装相关项目依赖 cd expressnamenpm install 将dist文件夹下生成的文件复制到express项目下的piblic文件夹下，然后运行npm start，启动express项目打开浏览器，输入localhost:3000查看效果","categories":[],"tags":[]},{"title":"自适应布局的几种方法","slug":"自适应布局的几种方法","date":"2018-05-01T12:44:19.000Z","updated":"2018-07-31T12:45:53.693Z","comments":true,"path":"2018/05/01/自适应布局的几种方法/","link":"","permalink":"cuijiahuan.github.io/2018/05/01/自适应布局的几种方法/","excerpt":"","text":"自适应布局的几种方法 百分比1&lt;meta name=&quot;viewport&quot; content=&quot;width-device-width,initial-scale=1&quot; viewport是网页默认的宽度和高度，width=device-width即网页宽度默认等于屏幕宽度，initial-scale=1即原始缩放比例为1.0，网页初始大小占屏幕面积的100%。 由于网页会根据屏幕宽度调整布局，所以不能使用绝对宽度的布局，也不能使用绝对宽度的元素，如css不能指定像素宽度，只能指定百分比宽度，字体不能使用绝对大小px，而只能使用相对大小em。 @media规则css3的@media规则可以在不改变html内容情况下，根据终端媒体设备的不同选择不同的css样式 具体写法： 123@media 设备类型 and (设备特性)&#123; css样式代码&#125; 例如： //浏览器窗口大于900px @media screen and(min-width:900px){ body{ font-size:25px; } } //浏览器窗口大于500px小于900px @media screen and(min-width:500px)and(max-width:900px){ body{ font-size:20px; } } //浏览器窗口小于500px @media screen and(max-width:500px){ body{ font-size:15px; } } rem自适应布局首先我们需要知道rem是相对于根元素的字体大小的单位，它是一个相对单位，同理em是相对于父元素的字体大小的单位；rem的计算规则依赖根元素，我们只需要在根元素确定一个px字号，就可以计算出元素的宽高。 target-densitydpi属性1&lt;meta name=&quot;viewport&quot; content=&quot;width=640,target-densitydpi=device-dpi,user-scalable=no&quot;&gt; 通过读取device-width的值来自动计算出target-densitydpi去实现自适应网页，不过缺点是目前只在android支持，具有兼容性问题。 target-densitydpi属性的取值范围： device-dpi --使用设备原本的dpi作为目标dpi，不会发生默认缩放。 high-dpi --使用hdpi作为目标dpi，中等像素密度和低像素密度设备相应缩小。 medium-dpi --使用mdpi作为目标dpi，高像素密度设备相应放大，低像素密度设备相应缩小，这是默认的target density low-dpi --使用ldpi作为目标dpi，中等像素密度和高像素密度设备相应放大 value --指定一个具体的dpi，值作为target dpi，这个值得范围必须在70-400之间。","categories":[],"tags":[]},{"title":"优雅降级与渐进增强","slug":"优雅降级与渐进增强","date":"2018-02-09T14:25:17.000Z","updated":"2018-02-26T06:51:31.337Z","comments":true,"path":"2018/02/09/优雅降级与渐进增强/","link":"","permalink":"cuijiahuan.github.io/2018/02/09/优雅降级与渐进增强/","excerpt":"","text":"优雅降级与渐进增强 优雅降级(Graceful Degradation)：一开始就构建站点的完整功能，然后针对浏览器测试和修复。比如一开始使用CSS3的特性构建了一个应用，然后逐步针对各大浏览器进行测试使其可以再低版本浏览器上正常浏览。 渐进增强(Progressive Enhancement)：一开始就针对低版本浏览器进行构建页面，完成基本的功能，然后再针对高级浏览器进行效果、交互、追加功能达到更好的体验。 渐进增强相当于向上兼容，而优雅降级相当于向下兼容，向下兼容指的是高版本支持低版本的或者说后期开发的版本支持和兼容早期开发的版本，向上兼容的很少，大多数软件都是向下兼容的 区别 优雅降级认为应该针对那些最高级、最完善的浏览器来设计网站。而将那些被认为“过时”或有功能缺失的浏览器下的测试工作安排在开发周期的最后阶段 渐进增强则认为应关注于内容本身，而对浏览器则是次要的，因为内容是建立网站的诱因，这使得渐进增强成一种更为合理的设计范例。 例：123456789101112.transition&#123; /*渐进式写法*/ -webkit-transition:all .5s; -moz-transition:all .5s; -o-transition:all .5s; transition:all .5s;&#125;.transition&#123; /*优雅降级写法*/ transition:all .5s; -o-transition:all .5s; -moz-transition:all .5s; -webkit-transition:all .5s;&#125; 前缀CSS3与正常CSS3在浏览器中的支持情况： 很久以前：浏览器前缀CSS3和正常CSS3都不支持； 不久之前：浏览器只支持前缀CSS3，不支持正常CSS3； 现在：浏览器既支持前缀CSS3，又支持正常CSS3； 未来：浏览器不支持前缀CSS3，仅支持正常CSS3。","categories":[],"tags":[]},{"title":"了解Vue-router","slug":"了解Vue-router","date":"2018-02-06T17:30:11.000Z","updated":"2018-02-07T03:45:00.480Z","comments":true,"path":"2018/02/07/了解Vue-router/","link":"","permalink":"cuijiahuan.github.io/2018/02/07/了解Vue-router/","excerpt":"","text":"Vue-router通过Vue我们可以实现组件化开发，而各组件之间如何跳转呢，在我们第一次项目用gulp构建工具开发时，页面跳转是通过a标签的href属性实现的，不过在Vue中，页面跳转是通过路由实现的，路由的配置就成了一个需要学习的问题 路由实现页面跳转首先需要安装插件 npm install vue-router –save 之后在 main.js 里面写入 import VueRouter from ‘vue-router’ Vue.use(VueRouter) 通过它来引入 vue-router ，之后进入 /router/index.js 文件，同样先引入 import Router from ‘vue-router’ Vue.use(Router) 然后将你需要进行跳转的组件引入这个文件中，比如我现在要进行首页(index.vue)与商品列表(goodlist.vue)的跳转,首先我们需要将这两个页面引进来 import index from ‘@/components/index.vue’ import goodlist from ‘@/components/goodlist/goodlist.vue’ 然后进行页面的配置 12345678910111213141516export default new Router(&#123; routers: [ &#123; title: &apos;首页&apos;， path: &apos;/&apos;, name: &apos;index&apos;, components: index &#125;, &#123; title: &apos;商品目录&apos;, path: &apos;/goodlist&apos;, name: &apos;goodlist&apos;, components: goodlist &#125; ]&#125;) 然后在你的index.vue中商品元素的父元素中写入点击事件 &lt;span @click=”goodlist()”&gt;商品目录&lt;/span&gt; 然后在script中写入 1234567export default &#123; methods: &#123; goodlist: function () &#123; this.$router.push(&#123;path: &apos;/goodlist&apos;&#125;) &#125; &#125;&#125; 之后在页面点击首页的商品就可以跳转到商品列表页面","categories":[],"tags":[]},{"title":"PWA了解【更新】","slug":"PWA了解","date":"2018-02-05T17:07:11.000Z","updated":"2019-07-12T03:19:08.086Z","comments":true,"path":"2018/02/06/PWA了解/","link":"","permalink":"cuijiahuan.github.io/2018/02/06/PWA了解/","excerpt":"","text":"分享总结Progressive Web App这个词直译就是“进步的web app”，由于学长推荐的学习网页需要翻墙才能看，我在这里给大家推荐另一个网站 什么是PWA,希望能有所帮助 什么是PWA？PWA是一种提升Web App体验的方法，能带给用户原生应用般的体验，而PWA的主要特点主要包含以下几点： 渐进式 - 适用于选用任何浏览器的所有用户，因为它是以渐进式增强作为核心宗旨来开发的 自适应 - 适合任何机型：桌面设备、移动设备、平板电脑等 连接无关性 - 能够借助服务工作线程在离线或低质量网络状况下工作 类似应用 - 由于是在 App Shell模型 基础上开发，因此具有应用风格的交互和导航，给用户以应用般的熟悉感 持续更新 - 在服务工作线程更新进程的作用下时刻保持最新状态 安全 - 通过HTTPS提供，以防止窥探和确保内容不被篡改 可发现 - W3C清单和服务工作流程注册作用域能够让搜索引擎找到它们，从而将其识别为“应用” 可再互动 - 通过推送通知之类的功能简化了再互动 可安装 - 用户可免去使用应用商店的麻烦，直接将对其最有用的应用“保留”在主屏幕上 可链接 - 可通过网址轻松分享，无需复杂的安装 比如有一个具体的例子，天气PWA，当我们平时遇到断网时刷新一下页面，电脑或手机会出现“未连接到互联网”之类的页面或错误提示，而PWA则会在断网刷新后依然出现页面内容，而且当我们对页面上一个内容很感兴趣时，我们可以直接将它放在主页面，不需要安装app,国内的 豆瓣网手机版 使用的也是PWA，对于如何使用，由于在chrome浏览器需要下载“Web Server for Chrome”扩展功能，我们可以查按照我推荐的那个网站来进行操作 Service Worker前端工程师有很多性能优化手段，包括CDN、CSS Sprite、文件的合并压缩、异步加载、资源缓存等（原谅我还不清楚具体的性能优化），而Service Worker让缓存做到了优雅、极致，让Web App的缺点更加弱化。 Service Worker特点： 一个独立的worker线程，独立于当前网页进程，有自己独立的worker context 一旦被install，就永远存在，除非被uninstall 需要时可直接唤醒、不需要要=可以自动睡眠‘ 可编程拦截代理请求和返回，缓存文件，缓存的文件可以被网页进程渠取到（包括离线状态） 离线内容开发者可控 能向客户端推送消息 不能直接操作DOM 必须在HTTPS环境下工作 异步实现，内部大都是通过Promise实现 如何使用Service Worker请看网站资源，我试过，不用翻墙，可以成功检查到是否安装Seivice Worker","categories":[],"tags":[]},{"title":"Vue中外链css和js【不推荐引】","slug":"vue中如何引入外链css和js","date":"2018-01-30T19:10:29.000Z","updated":"2019-07-11T08:35:15.646Z","comments":true,"path":"2018/01/31/vue中如何引入外链css和js/","link":"","permalink":"cuijiahuan.github.io/2018/01/31/vue中如何引入外链css和js/","excerpt":"","text":"初次使用vue，在这里我把我了解到的vue如何引入css和js方法给大家分享一下 引入外链css 大家的文件夹格式基本都是 这样的吧，在这里，我建议大家把css文件都放在static文件夹里面，可以直接放，也可以在里面新建文件夹放入，我也不知道为什么一定放在这里面，我放在比如assets里面死活就是不出来 放好之后，下面就可以直接在&lt;style&gt;里面引入格式如下： @import ‘./static/common.css’ 这是引入css 而对于js，我主要说一下如何引入jquery 首先我们输入命令行 npm install jquery –save 安装好之后，我们在’build/webpack.base.conf文件中引入jquery 123456789101112module.exports = &#123; ... resolve: &#123; extensions: [&apos;.js&apos;,&apos;.vue&apos;,&apos;.json&apos;], alias: &#123; &apos;vue$&apos;: &apos;vue/dist/vue.esm.js&apos;, &apos;@&apos;: resolve(&apos;src&apos;), &apos;jquery&apos;: path.resolve(__dirname, &apos;../node_modules/jquery/src/jquery&apos;) &#125; &#125;, ...&#125; 然后在你需要jquery的地方引入如下方法： import $ from ‘jquery’ 亲测是可以的","categories":[],"tags":[]},{"title":"setTimeout与闭包","slug":"setTimeout与闭包","date":"2018-01-29T17:07:11.000Z","updated":"2019-07-11T08:33:17.255Z","comments":true,"path":"2018/01/30/setTimeout与闭包/","link":"","permalink":"cuijiahuan.github.io/2018/01/30/setTimeout与闭包/","excerpt":"请输入密码进行查看","text":"Please enter the password to read the blog. Incorrect Password! No content to display! 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","categories":[],"tags":[]},{"title":"思考跨域问题","slug":"思考跨域问题","date":"2018-01-27T11:31:21.000Z","updated":"2018-02-07T04:01:40.531Z","comments":true,"path":"2018/01/27/思考跨域问题/","link":"","permalink":"cuijiahuan.github.io/2018/01/27/思考跨域问题/","excerpt":"","text":"什么是跨域问题？跨域就是指浏览器不能执行其他网站的脚本，这是由浏览器的同源策略造成的，是javascript的安全限制 一个域名地址是由： http://(请求头) www(子域名) . cuijahuan(主域名) : 8080(端口号) / script/jquery.js(请求资源地址) 组成的 而同源，就是指域名，协议，端口均相同 当协议、子域名、主域名、端口号中任意一个不相同时，都算作不同域 而不同域之间的相互请求资源，就是跨域比如http://cuijiahuan.xyz 请求 http://jiahuan.xyz 解决方法1、使用ajax的JSONP 首先要了解JSONP只支持GET请求，不支持POST请求 ajax请求受同源策略影响，不允许进行跨域请求，而script标签src属性可以访问跨域的js脚本，因此，服务器不再返回JSON格式的数据，而是返回一段调用某个函数的JS代码，在src中进行了调用，实现了跨域。 还没有看jsonp，目前我只知道要在ajax里面引入 type:&quot;get&quot;, // 接收服务器数据的类型 dataType:&quot;jsonp&quot;, // 用于服务器端的获取函数的参数 jsonp:&quot;callback&quot;, // 函数名称 2、使用jquery的jsonp插件 首先我们要引入相关的js文件，相关下载可参考该地址 在我们前端代码中需要在ajax里的url下加入 callbackParameter:&quot;callback&quot; callback:&quot;callback_success&quot; 使用该方法不局限于get请求，还可以是post请求，但从服务器获取到的依然是jsonp格式 第三种方法是使用cors方法，具体可以参考网上其他博客 附：在项目中我解决跨域问题没有用到jsonp，是通过后台修改来实现的，在前端ajax里面需要加上一句语句 xhrFields: {withCredentials: true} 这句是提供了请求发送凭证的支持","categories":[],"tags":[]},{"title":"swiper初步应用","slug":"swiper初步应用","date":"2018-01-21T16:57:30.000Z","updated":"2019-07-11T08:28:12.407Z","comments":true,"path":"2018/01/22/swiper初步应用/","link":"","permalink":"cuijiahuan.github.io/2018/01/22/swiper初步应用/","excerpt":"","text":"什么是swiper？swiper是一种用于移动端页面的前端特效插件，它是一种纯javascript的框架，主要用来做轮播图之类页面，在使用之前首先我们需要下载swiper 注：下载swiper-4.1.0.min.js和swiper-4.1.0.min.css即可 swiper使用方法1.首先加载插件1234567891011&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; ... &lt;link rel=&quot;stylesheet&quot; href=&quot;path/to/swiper.min.css&quot;&gt;&lt;/head&gt;&lt;body&gt; ... &lt;script src=&quot;path/to/swiper.min.js&quot;&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 2.HTML内容1234567891011121314151617&lt;div class=&quot;swiper-container&quot;&gt; &lt;div class=&quot;swiper-wrapper&quot;&gt; &lt;div class=&quot;swiper-slide&quot;&gt;Slide 1&lt;/div&gt; &lt;div class=&quot;swiper-slide&quot;&gt;Slide 2&lt;/div&gt; &lt;div class=&quot;swiper-slide&quot;&gt;Slide 3&lt;/div&gt; &lt;/div&gt; &lt;!-- 如果需要分页器 --&gt; &lt;div class=&quot;swiper-pagination&quot;&gt;&lt;/div&gt; &lt;!-- 如果需要导航按钮 --&gt; &lt;div class=&quot;swiper-button-prev&quot;&gt;&lt;/div&gt; &lt;div class=&quot;swiper-button-next&quot;&gt;&lt;/div&gt; &lt;!-- 如果需要滚动条 --&gt; &lt;div class=&quot;swiper-scrollbar&quot;&gt;&lt;/div&gt;&lt;/div&gt;导航等组件可以放在container之外 注：可以自行给swiper定义大小 3.初始化swiper1234567891011121314151617181920212223&lt;script&gt; var mySwiper = new Swiper (&apos;.swiper-container&apos;, &#123; direction: &apos;vertical&apos;, loop: true, // 如果需要分页器 pagination: &#123; el: &apos;.swiper-pagination&apos;, &#125;, // 如果需要前进后退按钮 navigation: &#123; nextEl: &apos;.swiper-button-next&apos;, prevEl: &apos;.swiper-button-prev&apos;, &#125;, // 如果需要滚动条 scrollbar: &#123; el: &apos;.swiper-scrollbar&apos;, &#125;, &#125;) &lt;/script&gt;&lt;/body&gt; 4.如何利用swiper实现一个简单的轮播图效果 默认前三项都成功完成 首先先上代码： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;swiper-4.1.0.min.css&quot;&gt; &lt;title&gt;轮播图&lt;/title&gt; &lt;style type=&quot;text/css&quot;&gt; .swiper-container &#123; width: 600px; height: 300px; &#125; .swiper-slide&#123; font-size: 50px; &#125; .swiper-slide:nth-of-type(1)&#123; background-color: cornflowerblue; &#125; .swiper-slide:nth-of-type(2)&#123; background-color: coral; &#125; .swiper-slide:nth-of-type(3)&#123; background-color: yellowgreen; &#125; .swiper-slide:nth-of-type(4)&#123; background-color: coral; &#125; .swiper-slide:nth-of-type(5)&#123; background-color: cornflowerblue; &#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;swiper-container&quot;&gt; &lt;div class=&quot;swiper-wrapper&quot;&gt; &lt;div class=&quot;swiper-slide&quot;&gt;Slide 1&lt;/div&gt; &lt;div class=&quot;swiper-slide&quot;&gt;Slide 2&lt;/div&gt; &lt;div class=&quot;swiper-slide&quot;&gt;Slide 3&lt;/div&gt; &lt;div class=&quot;swiper-slide&quot;&gt;Slide 4&lt;/div&gt; &lt;div class=&quot;swiper-slide&quot;&gt;Slide 5&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;script src=&quot;swiper-4.1.0.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt; var mySwiper = new Swiper (&apos;.swiper-container&apos;, &#123;// horizontal 水平 // vertical 垂直 direction: &apos;horizontal&apos;,// 开始显示第几张 initialSlide: 0,// 换页速度 speed: 1500,// 自动切换 autoplay: &#123; delay: 2000, &#125;, &#125;) &lt;/script&gt; &lt;/body&gt;&lt;/html&gt; initialSlide参数：设定初始化时slide页面的索引，初始时为0，即默认为轮播图第一张图；如果设置为2时，swiper初始化时页面就是轮播图第三张图 direction参数：设置轮播图的滑动方向，水平方向为（horizontal），垂直方向为（vertical），默认为水平方向 speed参数：轮播图的切换速度 autoplay参数：设置为true时自动切换图片，默认为false delay参数：自动切换的时间间隔，详情见上图代码 关于swiper的用法和初始化组件还有许多，具体请查看swiperAPI文档 分割线 在vue中我们可以直接下载插件实现swiper的功能 npm install vue-awesome-swiper 然后在main.js中引入 import VueAwesomeSwiper from ‘vue-awesome-swiper’Vue.use(VueAwesomeSwiper) 在对应的 .vue 比如(slide.vue)文件中，写入 12345678910111213141516171819202122232425262728293031323334353637383940template&gt; &lt;div id=&quot;slide&quot;&gt; &lt;swiper :options=&quot;swiperOption&quot; ref=&quot;mySwiper&quot;&gt; &lt;!-- 幻灯内容 --&gt; &lt;swiper-slide&gt;&lt;div class=&quot;fd_slide fd_slide1&quot;&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;1.jpg&quot;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/swiper-slide&gt; &lt;swiper-slide&gt;&lt;div class=&quot;fd_slide fd_slide2&quot;&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;2.jpg&quot;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/swiper-slide&gt; &lt;swiper-slide&gt;&lt;div class=&quot;fd_slide fd_slide3&quot;&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;3.jpg&quot;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/swiper-slide&gt; &lt;swiper-slide&gt;&lt;div class=&quot;fd_slide fd_slide4&quot;&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;4.jpg&quot;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/swiper-slide&gt; &lt;swiper-slide&gt;&lt;div class=&quot;fd_slide fd_slide5&quot;&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;5.jpg&quot;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/swiper-slide&gt; &lt;/swiper&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt;import &#123; swiper, swiperSlide &#125; from &apos;vue-awesome-swiper&apos;import $ from &apos;jquery&apos;export default &#123; components: &#123; swiper, swiperSlide &#125;, data () &#123; return &#123; swiperOption: &#123; initialSlide: 0, direction: &apos;horizontal&apos;, loop: true, loopAdditionalSlides: 2, speed: 1000, autoplay: &#123; delay: 2000 &#125;, autoplayDisableOnInteraction: false, observer: true, observeParents: true &#125; &#125; &#125; &#125;&lt;/script&gt;","categories":[],"tags":[]},{"title":"webpack【更新】","slug":"webpack学习【持续更新】","date":"2018-01-08T02:14:35.000Z","updated":"2019-07-12T03:19:32.384Z","comments":true,"path":"2018/01/08/webpack学习【持续更新】/","link":"","permalink":"cuijiahuan.github.io/2018/01/08/webpack学习【持续更新】/","excerpt":"","text":"什么是Webpack?Webpack是一个前端资源加载/打包工具，它将根据模块的依赖关系进行静态分析，然后将这些模块按照指定的规则生成对应的静态资源. 通俗地讲，Webpack可以看作是模块打包机：它做的事情是，分析你的项目结构，找到Javascript模块以及其他的一些浏览器不能直接运行的拓展语言（Scss，TypeScript等），并将其转换和打包为合适的格式供浏览器使用。 Webpack与Gulp区别Webpack与之前学习的gulp相比较而言，两者的流程不大相同，而且Wwbpack的处理速度更快更直接，能打包更多不同类型的文件。 gulp是一种能够优化前端的开发流程的工具，它的工作方式是：在一个配置文件中，指明对某些文件进行类似编译，组合，压缩等任务的具体步骤，工具之后可以自动替你完成这些任务。 Webpack是一种模块化的解决方案，它的工作方式是：把你的项目当做一个整体，通过一个给定的主文件（如：index.js），Webpack将从这个文件开始找到你的项目的所有依赖文件，使用loaders处理它们，最后打包为一个（或多个）浏览器可识别的Javascript文件。 【注:loader用于对模块的源代码进行转换,比如Webpack只能处理js文件，因此对于css文件就需要安装对应loader模块：style-loader和css-loader等】 从图中可以看出，Webpack可以将多种静态资源js,css,less转换成一个静态文件。 使用Webpack安装Webpack在安装之前，需要检查本地环境是否支持node.js 使用npm安装Webpack 1npm install webpack -g 创建一个文件夹在你的电脑随便一个盘里创建一个新的文件夹或者使用命令创建: 1mkdir webpack-test 在文件夹中新建一个run1.js文件，代码如下： 1document.write(&quot;Hello World&quot;); 再添加index.html文件，代码如下： 12345678&lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;bundle.js&quot;&gt; &lt;/body&gt;&lt;/html&gt; 接下来使用Webpack命令进行打包： 1webpack run1.js bundle.js 执行以上命令会编译run1.js文件并生成bundle.js文件 在浏览器中打开index.html文件，会看到页面上有“Hello World”。 Loader就像之前说的，如果想要处理除js之外的其他文件，对于css文件，首先需要执行命令来安装css-loader和style-loader 1npm install css-loader style-loader 接下来创建一个style.css文件，代码如下： 123body&#123; background:red;&#125; 修改run1.js文件： 12require(&quot;!style-loader!css-loader!./style.css&quot;);document.write(&quot;Hello World&quot;); 继续使用Webpack命令打包： 1webpack run1.js bundle.js 在浏览器访问index.html会发现背景变成红色。 配置文件可以将一些编译选项放在配置文件中，以便于统一管理。 创建webpack.config.js文件 123456789101112module.exports = &#123; entry: &quot;./run1.js&quot;, output: &#123; path: __dirname, filename: &quot;bundle.js&quot; &#125;, module: &#123; loaders: [ &#123;test: /\\.css$/,loader: &quot;style.loader!css-loader&quot;&#125; ] &#125;&#125;; 接下来只需要执行webpack命令即可生成bundle.js文件 Webpack命令执行后，会默认载入当前目录的webpack.config.js文件。 当你想要查看你添加的loaders模块时。可以在安装webpack之后再生成一个package.json文件,它里面会显示你当前所有的依赖模块，代码如下： 1npm init 默认一直点回车就行 开发环境如果不想每次修改模块之后还要重新编译，那么可以启用监听模式；开启之后，就不需要每次都重新编译，代码如下： 1webpack --watch 当然还有一种方法是启用一个本地服务器，来实现热加载，可以使用webpack-dev-server服务，当然首先需要安装： 1npm install webpack-dev-server -g 运行： 1webpack-dev-server 运行之后一般会通过localhost:8080启用一个express静态资源web服务器，并且会以监听模式自动运行webpack；如果该端口被占用，可以通过“ -port 端口号 ” 来改变服务器端口。 当然webpack还有其他功能。","categories":[],"tags":[]},{"title":"npm学习","slug":"npm学习","date":"2017-06-18T07:18:22.000Z","updated":"2018-02-14T11:37:57.758Z","comments":true,"path":"2017/06/18/npm学习/","link":"","permalink":"cuijiahuan.github.io/2017/06/18/npm学习/","excerpt":"","text":"什么是npm？它有什么作用？ npm是和node.js一起的包管理工具，并且在安装node.js时已经安装好了npm,npm常见的使用场景有以下几个: 1231.允许用户从npm服务器下载别人编写的第三方包到本地使用。2.允许用户从npm服务器下载并安装别人编写的命令行程序到本地使用。3.允许用户将自己编写的包或命令行程序上传到npm服务器供别人使用。 安装npm npm本地安装的命令为: 1npm install npm 全局安装的命令为: 1npm install npm -g 如果要检查是否安装成功可以输入命令行: 1npm -v 来测试是否安装成功。 使用package.jsonpackage.json位于模块的目录下，用于定义包的属性。 在当前目录下产生package.json文件1npm init 安装当前package,json中定义的模块1npm install 注册与提交注册用户1234npm adduserUsername:输入用户名Password:输入密码Email:输入邮箱 编写完模块后输入命令行:1npm publish #发表模块 更新模块 尽管node.js自带pm，但是如果想要更新npm的话。可以输入命令: 1npm update npm -g 搜索模块1npm search &quot;Module Name&quot;","categories":[],"tags":[]},{"title":"gulp学习","slug":"gulp学习","date":"2017-06-15T11:05:28.000Z","updated":"2018-02-14T11:37:47.243Z","comments":true,"path":"2017/06/15/gulp学习/","link":"","permalink":"cuijiahuan.github.io/2017/06/15/gulp学习/","excerpt":"","text":"gulp作为前端开发过程中对代码进行构建的工具，对它进行了解学习是必要的，它可以提高我们的学习和工作效率 要使用gulp，首先要明白它是基于node.js下运行的，所以我们需要先安装node.js，安装完成后再安装gulp，这里分为全局安装gulp与本地安装gulp：对于全局安装，它的目的是为了通过它执行gulp任务;安装的命令提示符是： 1npm install gulp -g 安装好之后，可以使用 1gulp -v 来进行验证，如果出现版本号即为正确安装 而本地安装只需要将”-g”去掉 1npm install gulp 安装完成之后我们需要新建一个package,json文件 说明：package.json是基于node.js项目必不可少的配置文件，它是存放在项目根目录的json文件(在之后的gulpfile.js编写中也可以当做检查gulp插件是否调入的判断)安装的命令提示符 1npm init 这里需要说明一下package.json文件里的内容 123456789101.name:项目名称2.version:版本号3.description:项目描述4.homepage:项目网站5.author:作者姓名6.contributors:其他相关人姓名7.dependencies:包(插件)列表，默认在node_modules目录下8.repository:包(插件)存放地方的类型，可以是git或svn,git可在GitHub上9.main:main字段指定了程序的主入口文件，require(&apos;moduleName&apos;)就会加载这个文件。这个字段的默认值是模块根目录下面的index.js10.keywords:关键字 在gulp里面的主要知识点我个人认为是在于写gulpfile.js文件举例说明 123456var sass = require(&apos;gulp-sass&apos;); //将插件导入文件中并命名gulp.task(&apos;sass&apos;,function()&#123; //定义一个匿名函数return gulp.src(&apos;stylesheets/**/*.scss&apos;) .pipe(sass()) .pipe(gulp.dest(&apos;dist/css&apos;));&#125;); gulp.src() –找出需要处理的文件 .pipe() –指定需要执行的功能 gulp.desk() –将处理好的文件放到指定的位置 像例子中的sass就是一个插件，它的功能是将文件变为.css格式的文件,安装方式是 1npm install gulp-sass --save-dev 其他插件的安装方式与用法基本类似,不多描述 下面是我对gulp中的几个API的理解1.gulp.src()利用这个方法可以读取你需要的文件，语法为:1gulp.src(globs[,optios]) globs参数是文件匹配模式，用来匹配文件路径；当有多个模式时，该参数为一个数组；options为可选参数，通常用不到 2.gulp.dest()用来写文件，其语法为:1gulp.dest(path[,optios]) path为写入文件的路径；options为可选参数，通常用不到 3.gulp.task()用来定义任务，语法为:1gulp.task(name[,deps],fn) name为任务名；deps是当前定义的任务需要依赖其他任务；fn为任务函数，任务要执行的代码写在里面 4.gulp.watch()用来监视文件的变化，当文件发生变化后，可以利用它来执行相应的任务,语法为:1gulp.watch(glob[,opta],tasks) glob为要监视的文件匹配模式；opts为一个可选的配置对象，通常不用；tasks为文件变化后要执行的任务，为一个数组","categories":[],"tags":[]}]}